version: 0.2

phases:
  pre_build:
    commands:
      - echo Installing helm
      - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
      - chmod 700 get_helm.sh
      - ./get_helm.sh
      - echo Login to ECR
      - mkdir ~/.kube
      - aws ecr get-login-password --region ${region}  | helm registry login --username AWS --password-stdin ${ecr_domain}
  build:
    commands:
%{ if ecr_repo_name != "" ~}
      - LATEST_IMAGE_INFO=$(aws ecr describe-images --repository-name ${ecr_repo_name} --region ${region} | jq -r '.imageDetails[] | select( [ .imageTags[] | contains("latest") ] | any)')
      - REGISTRY_ID=$(echo $LATEST_IMAGE_INFO | jq -r '.registryId')
      - LATEST_TAG=$(echo $LATEST_IMAGE_INFO | jq -r '.imageTags[] | select(. != "latest")')
      - IMAGE_URL=$REGISTRY_ID.dkr.ecr.${region}.amazonaws.com/${ecr_repo_name}
%{ endif ~}

%{ for helm_value, secret_id in helm_value_secret_ids ~}
      - SECRET_VALUE_${helm_value}=$(aws secretsmanager get-secret-value --region ${region} --secret-id ${secret_id} --query SecretString --output text)
%{ endfor ~}

      - ASSUME_ROLE_INFO=$(aws sts assume-role --role-arn "${eks_admin_role_arn}" --role-session-name ${deploy_name}-helm-deploy)
      - AWS_ACCESS_KEY_ID=$(echo $ASSUME_ROLE_INFO | jq -r '.Credentials.AccessKeyId')
      - AWS_SECRET_ACCESS_KEY=$(echo $ASSUME_ROLE_INFO | jq -r '.Credentials.SecretAccessKey')
      - AWS_SESSION_TOKEN=$(echo $ASSUME_ROLE_INFO | jq -r '.Credentials.SessionToken')
      
      - aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
      - aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
      - aws configure set aws_session_token "$AWS_SESSION_TOKEN"

      - helm upgrade ${helm_name} oci://${chart_repo} --install --create-namespace --namespace ${namespace} --wait %{ if ecr_repo_name != "" }--set image=$IMAGE_URL --set tag=$LATEST_TAG %{ endif }%{ for helm_value, secret_id in helm_value_secret_ids ~} --set ${helm_value}=$SECRET_VALUE_${helm_value} %{ endfor ~} 